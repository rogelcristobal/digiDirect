{"version":3,"file":"static/js/948.1cba4ab2.chunk.js","mappings":"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","sources":["components/FileInput.jsx","pages/Sample.jsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { TbCloudUpload } from \"react-icons/tb\";\r\n\r\nconst FileInput = () => {\r\n  const inputRef = useRef();\r\n  const [files, setFiles] = useState([]);\r\n\r\n\r\n  function handleDrop(event) {\r\n    event.preventDefault();\r\n    const droppedFiles = event.dataTransfer.files;\r\n    inputRef.current.files = droppedFiles;\r\n    setFiles(droppedFiles);\r\n   \r\n  }\r\n\r\n  function handleChange(event) {\r\n    const selectedFiles = event.target.files;\r\n    inputRef.current.files = selectedFiles;\r\n    setFiles(selectedFiles);\r\n  }\r\n\r\n   console.log(files);\r\n  return (\r\n    <label\r\n      onDrop={handleDrop}\r\n      className=\"block h-full w-full border-medium-box  box-border relative rounded-lg cursor-pointer hover:text-[#0b70df] transition-all duration-300 ease-in-out\"\r\n    >\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        className=\"absolute text-center flex flex-col items-center justify-state font-plus font-semibold text-[2rem] gap-3  top-1/2 -translate-y-1/2 transform left-1/2 -translate-x-1/2\"\r\n      >\r\n        <TbCloudUpload></TbCloudUpload>\r\n        <span className=\"text-[0.8rem]\">Upload files here</span>\r\n      </Typography>\r\n      <input type=\"file\" ref={inputRef} className=\"invisible\" multiple onChange={handleChange}/>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import { Box, Typography, Divider } from \"@mui/material\";\r\nimport TextContent from \"../components/TextContent\";\r\nimport { useState, useRef, useContext, useEffect } from \"react\";\r\nimport PageScrollableContext from \"../context/PageScrollableContext\";\r\nimport Scrollbar from \"smooth-scrollbar\";\r\nimport FileInput from \"../components/FileInput\";\r\nimport { Button } from \"@mui/material\";\r\nimport { TbClipboard, TbClearAll } from \"react-icons/tb\";\r\nconst Sample = () => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [keyFeatures, setKeyFeatures] = useState([]);\r\n\r\n  const ref = useRef(null);\r\n  const { setScrollEl, scrollEl } = useContext(PageScrollableContext);\r\n  const options = {\r\n    damping: 0.03,\r\n    renderByPixels: true,\r\n  };\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      setScrollEl(ref.current);\r\n    }\r\n    Scrollbar.init(ref.current, options);\r\n  }, []);\r\n\r\n  // Prompt the user for a product name\r\n\r\n  // Prompt the user for key features and add them to the array\r\n  const addKeyFeature = () => {\r\n    const feature = prompt(\"Please enter a key feature:\");\r\n    setKeyFeatures([...keyFeatures, feature]);\r\n  };\r\n\r\n  // Generate a more elaborate and encouraging sentence using the key features\r\n  const sentence = `The ${productName} is an excellent choice because it is known for its ${keyFeatures.join(\r\n    \", \"\r\n  )}. Not only will you enjoy these impressive features, but you'll also be making a smart investment in a high-quality product that will last for years to come. Don't miss out on this opportunity to own the  ${productName} - buy now at digiDirect and experience the difference!`;\r\n\r\n  const handleCopy = (data) => {\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"copied\");\r\n  };\r\n\r\n  const [state, setState] = useState(\"\");\r\n  const lines = state?.split(\"\\n\");\r\n\r\n  return (\r\n    <Box\r\n      ref={ref}\r\n      className=\"block w-full pb-52 h-full box-border pt-14  relative \"\r\n    >\r\n      {/* header */}\r\n      <Box className=\" h-40 w-full    pt-6 box-border\">\r\n        {/* wrapper */}\r\n        <Box className=\"h-full w-full flex flex-col items-start justify-start py-4 px-10 box-border relative\">\r\n          {/* title */}\r\n          <TextContent\r\n            category=\"API & Tools\"\r\n            sx=\" w-fit h-fit py-2 px-2 \"\r\n            title={\r\n              <Typography\r\n                variant=\"body1\"\r\n                className=\"capitalize  text-[1.6rem] font-medium font-plus  \"\r\n              >\r\n                sample\r\n              </Typography>\r\n            }\r\n          ></TextContent>\r\n        </Box>\r\n        <Divider variant=\"fullWidth\" light></Divider>\r\n      </Box>\r\n\r\n      {/* content */}\r\n      <Box className=\"h-auto w-full  px-10 box-border  pt-6\">\r\n        <Box className=\"border-thin-box flex items-center justify-start gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"h-8 border-none outline-2 outline outline-blue-500 rounded px-2 w-52 text-md font-plus font-medium\"\r\n            placeholder=\"Please enter a product name:\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"font-plus shadow-none rounded-md\"\r\n            onClick={addKeyFeature}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              className=\"text-[0.9rem] font-plus font-medium normal-case tracking-wide\"\r\n            >\r\n              Add key feature\r\n            </Typography>\r\n          </Button>\r\n        </Box>\r\n        <Box className=\"flex flex-col items-state justify-start space-y-3 mt-6\">\r\n          <Typography variant=\"body2\" className=\"font-bold font-plus\">\r\n            Output:\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            className=\"font-plus font-medium indent-4 text-[1.1rem]\"\r\n          >\r\n            The <span className=\"text-blue-500\">{productName}</span> is an excellent choice because it is known for\r\n            its <span className=\"text-green-500\">{keyFeatures.join(\", \")}</span> . Not only will you enjoy these\r\n            impressive features, but you'll also be making a smart investment in\r\n            a high-quality product that will last for years to come. Don't miss\r\n            out on this opportunity to own the <span className=\"text-blue-500\">{productName}</span> - buy now at\r\n            digiDirect and experience the difference!\r\n           \r\n          </Typography>\r\n        </Box>\r\n        <Box className=\"flex items-center justify-start gap-4\">\r\n          <Button\r\n            startIcon={<TbClipboard className=\"text-sm\" />}\r\n            onClick={() => handleCopy(sentence)}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className=\"mt-8 rounded-md bg-[#101626] p-2 px-4 shadow-none  flex items-center\"\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              className=\"text-[0.7rem] font-plus normal-case tracking-wide\"\r\n            >\r\n              Copy\r\n            </Typography>\r\n          </Button>\r\n          <Button\r\n            startIcon={<TbClearAll className=\"text-sm\" />}\r\n            onClick={() => {\r\n              setKeyFeatures([]);\r\n              setProductName(\"\");\r\n            }}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className=\"mt-8 rounded-md bg-[#101626] p-2 px-4 shadow-none  flex items-center\"\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              className=\"text-[0.7rem] font-plus normal-case tracking-wide\"\r\n            >\r\n              Clear\r\n            </Typography>\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* <textarea id=\"myTextarea\" onChange={e=>setState(e.target.value)}></textarea>\r\n          <Button\r\n        //   startIcon={<TbClipboard className=\"text-sm\" />}\r\n          onClick={()=>{\r\n            const lines = state?.split('\\n')\r\n            console.log(lines)\r\n          }}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          className=\" rounded-md bg-[#101626] p-2 px-4 shadow-none  flex items-center\"\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            className=\"text-[0.7rem] font-plus normal-case tracking-wide\"\r\n          >\r\n            Generate\r\n          </Typography>\r\n        </Button> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sample;\r\n"],"names":["inputRef","useRef","useState","files","setFiles","console","log","onDrop","event","preventDefault","droppedFiles","dataTransfer","current","className","variant","type","ref","multiple","onChange","selectedFiles","target","productName","setProductName","keyFeatures","setKeyFeatures","useContext","PageScrollableContext","setScrollEl","options","scrollEl","damping","renderByPixels","useEffect","Scrollbar","sentence","join","state","split","category","sx","title","light","placeholder","value","e","onClick","feature","prompt","startIcon","data","navigator","clipboard","writeText","alert","size"],"sourceRoot":""}