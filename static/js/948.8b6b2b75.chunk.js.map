{"version":3,"file":"static/js/948.8b6b2b75.chunk.js","mappings":"iKAyCA,IArCkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,UACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OADCC,QAAQC,IAAIH,IAEX,mBACEI,OAjBJ,SAAoBC,GAClBA,EAAMC,iBACN,IAAMC,EAAeF,EAAMG,aAAaR,MACxCH,EAASY,QAAQT,MAAQO,EACzBN,EAASM,EAEV,EAYGG,UAAU,oLAFZ,WAIE,UAAC,IAAD,CACEC,QAAQ,YACRD,UAAU,2GAFZ,WAIE,SAAC,MAAD,KACA,iBAAMA,UAAU,gBAAhB,mCAEF,kBAAOE,KAAK,OAAOC,IAAKhB,EAAUa,UAAU,YAAYI,UAAQ,EAACC,SAnBrE,SAAsBV,GACpB,IAAMW,EAAgBX,EAAMY,OAAOjB,MACnCH,EAASY,QAAQT,MAAQgB,EACzBf,EAASe,EACV,MAkBF,C,iKCgED,UA/Fe,WACb,OAAsCjB,EAAAA,EAAAA,UAAS,IAA/C,eAAOmB,EAAP,KAAoBC,EAApB,KACA,GAAsCpB,EAAAA,EAAAA,UAAS,IAA/C,eAAOqB,EAAP,KAAoBC,EAApB,KAEMR,GAAMf,EAAAA,EAAAA,QAAO,MACnB,GAAkCwB,EAAAA,EAAAA,YAAWC,EAAAA,GAArCC,EAAR,EAAQA,YACFC,GADN,EAAqBC,SACL,CACdC,QAAS,IACTC,gBAAgB,KAElBC,EAAAA,EAAAA,YAAU,WACJhB,EAAIJ,SACNe,EAAYX,EAAIJ,SAElBqB,EAAAA,EAAAA,KAAejB,EAAIJ,QAASgB,EAC7B,GAAE,IAGH,IAAMM,GACJ,kBACEnB,KAAK,OACLoB,YAAY,+BACZC,MAAOf,EACPH,SAAU,SAACmB,GAAD,OAAOf,EAAee,EAAEjB,OAAOgB,MAA/B,IAWRE,EAAQ,cAAUjB,EAAV,+DAA4EE,EAAYgB,KACpG,MADY,wNAEmMlB,EAFnM,2DASd,OACE,UAAC,IAAD,CACEL,IAAKA,EACLH,UAAU,wDAFZ,WAKE,UAAC,IAAD,CAAKA,UAAU,kCAAf,WAEE,SAAC,IAAD,CAAKA,UAAU,uFAAf,UAEE,SAAC,IAAD,CACE2B,SAAS,cACTC,GAAG,0BACHC,OACE,SAAC,IAAD,CACE5B,QAAQ,QACRD,UAAU,oDAFZ,yBASN,SAAC,IAAD,CAASC,QAAQ,YAAY6B,OAAK,QAIpC,UAAC,IAAD,CAAK9B,UAAU,wCAAf,WACE,2BACGqB,GACD,mBAAQU,QA7CM,WACpB,IAAMC,EAAUC,OAAO,+BACvBtB,EAAe,GAAD,eAAKD,GAAL,CAAkBsB,IACjC,EA0CO,8BACA,uBAAIP,QAEN,SAAC,IAAD,CACES,WAAW,SAAC,MAAD,CAAalC,UAAU,YAClC+B,QAAS,kBAxCGI,EAwCcV,EAvChCW,UAAUC,UAAUC,UAAUH,QAC9BI,MAAM,UAFW,IAACJ,CAwCH,EACTlC,QAAQ,YACRuC,KAAK,QACLxC,UAAU,mEALZ,UAOE,SAAC,IAAD,CACEC,QAAQ,QACRD,UAAU,oDAFZ,yBAUT,C","sources":["components/FileInput.jsx","pages/Sample.jsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { TbCloudUpload } from \"react-icons/tb\";\r\n\r\nconst FileInput = () => {\r\n  const inputRef = useRef();\r\n  const [files, setFiles] = useState([]);\r\n\r\n\r\n  function handleDrop(event) {\r\n    event.preventDefault();\r\n    const droppedFiles = event.dataTransfer.files;\r\n    inputRef.current.files = droppedFiles;\r\n    setFiles(droppedFiles);\r\n   \r\n  }\r\n\r\n  function handleChange(event) {\r\n    const selectedFiles = event.target.files;\r\n    inputRef.current.files = selectedFiles;\r\n    setFiles(selectedFiles);\r\n  }\r\n\r\n   console.log(files);\r\n  return (\r\n    <label\r\n      onDrop={handleDrop}\r\n      className=\"block h-full w-full border-medium-box flex items-center justify-center box-border relative rounded-lg cursor-pointer hover:text-[#0b70df] transition-all duration-300 ease-in-out\"\r\n    >\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        className=\"absolute text-center flex flex-col items-center justify-state font-plus font-semibold text-[2rem] gap-2 \"\r\n      >\r\n        <TbCloudUpload></TbCloudUpload>\r\n        <span className=\"text-[0.9rem]\">Upload files here</span>\r\n      </Typography>\r\n      <input type=\"file\" ref={inputRef} className=\"invisible\" multiple onChange={handleChange}/>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import { Box, Typography, Divider } from \"@mui/material\";\r\nimport TextContent from \"../components/TextContent\";\r\nimport { useState, useRef, useContext, useEffect } from \"react\";\r\nimport PageScrollableContext from \"../context/PageScrollableContext\";\r\nimport Scrollbar from \"smooth-scrollbar\";\r\nimport FileInput from \"../components/FileInput\";\r\nimport {Button} from \"@mui/material\"\r\nimport {TbClipboard} from 'react-icons/tb'\r\nconst Sample = () => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [keyFeatures, setKeyFeatures] = useState([]);\r\n\r\n  const ref = useRef(null);\r\n  const { setScrollEl, scrollEl } = useContext(PageScrollableContext);\r\n  const options = {\r\n    damping: 0.03,\r\n    renderByPixels: true,\r\n  };\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      setScrollEl(ref.current);\r\n    }\r\n    Scrollbar.init(ref.current, options);\r\n  }, []);\r\n\r\n  // Prompt the user for a product name\r\n  const productNameInput = (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Please enter a product name:\"\r\n      value={productName}\r\n      onChange={(e) => setProductName(e.target.value)}\r\n    />\r\n  );\r\n\r\n  // Prompt the user for key features and add them to the array\r\n  const addKeyFeature = () => {\r\n    const feature = prompt(\"Please enter a key feature:\");\r\n    setKeyFeatures([...keyFeatures, feature]);\r\n  };\r\n\r\n  // Generate a more elaborate and encouraging sentence using the key features\r\n  const sentence = `The ${productName} is an excellent choice because it is known for its ${keyFeatures.join(\r\n    \", \"\r\n  )}. Not only will you enjoy these impressive features, but you'll also be making a smart investment in a high-quality product that will last for years to come. Don't miss out on this opportunity to own the  ${productName} - buy now at digiDirect and experience the difference!`;\r\n\r\n  const handleCopy = (data) => {\r\n    navigator.clipboard.writeText(data);\r\n    alert('copied')\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      ref={ref}\r\n      className=\"block w-full pb-52 h-full box-border pt-14  relative \"\r\n    >\r\n      {/* header */}\r\n      <Box className=\" h-40 w-full    pt-6 box-border\">\r\n        {/* wrapper */}\r\n        <Box className=\"h-full w-full flex flex-col items-start justify-start py-4 px-10 box-border relative\">\r\n          {/* title */}\r\n          <TextContent\r\n            category=\"API & Tools\"\r\n            sx=\" w-fit h-fit py-2 px-2 \"\r\n            title={\r\n              <Typography\r\n                variant=\"body1\"\r\n                className=\"capitalize  text-[1.6rem] font-medium font-plus  \"\r\n              >\r\n                sample\r\n              </Typography>\r\n            }\r\n          ></TextContent>\r\n        </Box>\r\n        <Divider variant=\"fullWidth\" light></Divider>\r\n      </Box>\r\n\r\n      {/* content */}\r\n      <Box className=\"h-auto w-full  px-10 box-border  pt-0\">\r\n        <div>\r\n          {productNameInput}\r\n          <button onClick={addKeyFeature}>Add Key Feature</button>\r\n          <p>{sentence}</p>\r\n        </div>\r\n        <Button\r\n          startIcon={<TbClipboard className=\"text-sm\" />}\r\n          onClick={() => handleCopy(sentence)}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          className=\" rounded-md bg-[#101626] p-2 px-4 shadow-none  flex items-center\"\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            className=\"text-[0.7rem] font-plus normal-case tracking-wide\"\r\n          >\r\n            Copy\r\n          </Typography>\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sample;\r\n"],"names":["inputRef","useRef","useState","files","setFiles","console","log","onDrop","event","preventDefault","droppedFiles","dataTransfer","current","className","variant","type","ref","multiple","onChange","selectedFiles","target","productName","setProductName","keyFeatures","setKeyFeatures","useContext","PageScrollableContext","setScrollEl","options","scrollEl","damping","renderByPixels","useEffect","Scrollbar","productNameInput","placeholder","value","e","sentence","join","category","sx","title","light","onClick","feature","prompt","startIcon","data","navigator","clipboard","writeText","alert","size"],"sourceRoot":""}