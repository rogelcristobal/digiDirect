{"version":3,"file":"static/js/437.f11c56a6.chunk.js","mappings":"8PAyCA,EArCkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,UACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OADCC,QAAQC,IAAIH,IAEX,mBACEI,OAjBJ,SAAoBC,GAClBA,EAAMC,iBACN,IAAMC,EAAeF,EAAMG,aAAaR,MACxCH,EAASY,QAAQT,MAAQO,EACzBN,EAASM,EAEV,EAYGG,UAAU,oLAFZ,WAIE,UAACC,EAAA,EAAD,CACEC,QAAQ,YACRF,UAAU,2GAFZ,WAIE,SAAC,MAAD,KACA,iBAAMA,UAAU,gBAAhB,mCAEF,kBAAOG,KAAK,OAAOC,IAAKjB,EAAUa,UAAU,YAAYK,UAAQ,EAACC,SAnBrE,SAAsBX,GACpB,IAAMY,EAAgBZ,EAAMa,OAAOlB,MACnCH,EAASY,QAAQT,MAAQiB,EACzBhB,EAASgB,EACV,MAkBF,EC2BD,EA5DkB,WAAO,IAAD,EAChBH,GAAMhB,EAAAA,EAAAA,QAAO,MACnB,GAAkCqB,EAAAA,EAAAA,YAAWC,EAAAA,GAArCC,EAAR,EAAQA,YACFC,GADN,EAAqBC,SACL,CACdC,QAAS,IACTC,gBAAgB,KAElBC,EAAAA,EAAAA,YAAU,WACJZ,EAAIL,SACNY,EAAYP,EAAIL,SAElBkB,EAAAA,EAAAA,KAAeb,EAAIL,QAASa,EAC7B,GAAE,IAEH,OAAgCvB,EAAAA,EAAAA,UAAS,IAAzC,eAAO6B,EAAP,UAMA,OADA1B,QAAQC,IAAR,UAAYyB,EAAS,UAArB,aAAY,EAAaC,OAEvB,UAACC,EAAA,EAAD,CACEhB,IAAKA,EACLJ,UAAU,wDAFZ,WAKE,SAACoB,EAAA,EAAD,CAAKpB,UAAU,kCAAf,UAEE,SAACoB,EAAA,EAAD,CAAKpB,UAAU,uFAAf,UAEE,SAACqB,EAAA,EAAD,CACEC,SAAS,cACTC,GAAG,0BACHC,OACE,SAACvB,EAAA,EAAD,CACEC,QAAQ,QACRF,UAAU,wDAFZ,+BAaR,UAACoB,EAAA,EAAD,CAAKpB,UAAU,wCAAf,WACE,SAACoB,EAAA,EAAD,CAAKpB,UAAU,0DAAf,UACE,SAACoB,EAAA,EAAD,CAAKpB,UAAU,yCAAf,UACE,SAAC,EAAD,SAGJ,SAACoB,EAAA,EAAD,CAAKpB,UAAU,mDAMtB,C","sources":["components/FileInput.jsx","pages/Converter.jsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { TbCloudUpload } from \"react-icons/tb\";\r\n\r\nconst FileInput = () => {\r\n  const inputRef = useRef();\r\n  const [files, setFiles] = useState([]);\r\n\r\n\r\n  function handleDrop(event) {\r\n    event.preventDefault();\r\n    const droppedFiles = event.dataTransfer.files;\r\n    inputRef.current.files = droppedFiles;\r\n    setFiles(droppedFiles);\r\n   \r\n  }\r\n\r\n  function handleChange(event) {\r\n    const selectedFiles = event.target.files;\r\n    inputRef.current.files = selectedFiles;\r\n    setFiles(selectedFiles);\r\n  }\r\n\r\n   console.log(files);\r\n  return (\r\n    <label\r\n      onDrop={handleDrop}\r\n      className=\"block h-full w-full border-medium-box flex items-center justify-center box-border relative rounded-lg cursor-pointer hover:text-[#0b70df] transition-all duration-300 ease-in-out\"\r\n    >\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        className=\"absolute text-center flex flex-col items-center justify-state font-plus font-semibold text-[2rem] gap-2 \"\r\n      >\r\n        <TbCloudUpload></TbCloudUpload>\r\n        <span className=\"text-[0.9rem]\">Upload files here</span>\r\n      </Typography>\r\n      <input type=\"file\" ref={inputRef} className=\"invisible\" multiple onChange={handleChange}/>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import { Box, Typography, Divider } from \"@mui/material\";\r\nimport TextContent from \"../components/TextContent\";\r\nimport { useState, useRef, useContext, useEffect } from \"react\";\r\nimport PageScrollableContext from \"../context/PageScrollableContext\";\r\nimport Scrollbar from \"smooth-scrollbar\";\r\nimport FileInput from '../components/FileInput'\r\nconst Converter = () => {\r\n  const ref = useRef(null);\r\n  const { setScrollEl, scrollEl } = useContext(PageScrollableContext);\r\n  const options = {\r\n    damping: 0.03,\r\n    renderByPixels: true,\r\n  };\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      setScrollEl(ref.current);\r\n    }\r\n    Scrollbar.init(ref.current, options);\r\n  }, []);\r\n\r\n  const [fileData, setFileData] = useState([]);\r\n  const handleAddFile = (e) => {\r\n    const file = e.target.files[0];\r\n    setFileData([...fileData, file]);\r\n  };\r\n  console.log(fileData[0]?.name);\r\n  return (\r\n    <Box\r\n      ref={ref}\r\n      className=\"block w-full pb-52 h-full box-border pt-14  relative \"\r\n    >\r\n      {/* header */}\r\n      <Box className=\" h-40 w-full    pt-6 box-border\">\r\n        {/* wrapper */}\r\n        <Box className=\"h-full w-full flex flex-col items-start justify-start py-4 px-10 box-border relative\">\r\n          {/* title */}\r\n          <TextContent\r\n            category=\"API & Tools\"\r\n            sx=\" w-fit h-fit py-2 px-2 \"\r\n            title={\r\n              <Typography\r\n                variant=\"body1\"\r\n                className=\"capitalize  text-[1.725rem] font-semibold font-plus  \"\r\n              >\r\n                Converters\r\n              </Typography>\r\n            }\r\n          ></TextContent>\r\n        </Box>\r\n        {/* <Divider variant=\"fullWidth\" light></Divider> */}\r\n      </Box>\r\n\r\n      {/* content */}\r\n      <Box className=\"h-auto w-full  px-10 box-border  pt-0\">\r\n        <Box className=\"h-48  w-full box-border flex items-center justify-start\">\r\n          <Box className=\"h-full w-full max-w-[35rem] box-border\"> \r\n            <FileInput />\r\n          </Box>\r\n        </Box>\r\n        <Box className=\"h-full w-full space-y-20  px-2 box-border\">\r\n          {/*  */}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Converter;\r\n\r\n// <input type=\"file\" name=\"item\" id=\"\" onChange={handleAddFile}/>\r\n"],"names":["inputRef","useRef","useState","files","setFiles","console","log","onDrop","event","preventDefault","droppedFiles","dataTransfer","current","className","Typography","variant","type","ref","multiple","onChange","selectedFiles","target","useContext","PageScrollableContext","setScrollEl","options","scrollEl","damping","renderByPixels","useEffect","Scrollbar","fileData","name","Box","TextContent","category","sx","title"],"sourceRoot":""}